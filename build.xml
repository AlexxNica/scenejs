<!--
	Builds SceneJS

	Guava3D home:	http://scenejs.org
	Author: 	Lindsay S. Kay, Jan 2, 2010
-->
<project name="" basedir="." default="package">

    <property name="BUILD_MAJOR" value="0"/>
    <property name="BUILD_MINOR" value="7"/>
    <property name="BUILD_ID" value="0"/>

    <property name="LIB_DIR" location="${basedir}/lib"/>

    <property name="SRC_DIR" location="${basedir}/src"/>

    <property name="EXAMPLES_DIR" location="${basedir}/website"/>

    <property name="SCENEJS_JS_NAME" value="scenejs.js"/>

    <property name="SCENEJS_MIN_JS_NAME" value="scenejs.min.js"/>

    <property name="DIST_CONTAINER_DIR" location="${basedir}/dist"/>

    <property name="SCENEJS_NAME" value="scenejs-${BUILD_MAJOR}.${BUILD_MINOR}.${BUILD_ID}"/>

    <property name="EXTRACTED_DIST_DIR" location="${DIST_CONTAINER_DIR}/extracted/${SCENEJS_NAME}"/>


    <path id="yuicompressor.classpath">
        <fileset dir="${LIB_DIR}">
            <include name="**/yuicompressor-2.4.2.jar"/>
            <include name="**/YUIAnt.jar"/>

        </fileset>
    </path>


    <target name="all" depends="archive"/>

    <target name="archive" depends="package" description="Create archives of downloads">

        <tar destfile="${DIST_CONTAINER_DIR}/${SCENEJS_NAME}.tar.gz"
             basedir="${DIST_CONTAINER_DIR}/extracted"
             compression="gzip"/>

        <zip destfile="${DIST_CONTAINER_DIR}/${SCENEJS_NAME}.zip" basedir="${DIST_CONTAINER_DIR}/extracted"/>

        <!-- Write version data to website -->
        <echo file="website/data/version.js" append="false">{ version: "${BUILD_MAJOR}.${BUILD_MINOR}.${BUILD_ID}" }
        </echo>
    </target>

    <!-- Create compressed javascript lib -->

    <target name="package" depends="assemble-lib" description="Create compressed SceneJS lib">
        <taskdef name="yuicompress" classname="com.yahoo.platform.yui.compressor.YUICompressTask">
            <classpath>
                <path refid="yuicompressor.classpath"/>
            </classpath>
        </taskdef>
        <yuicompress linebreak="300" warn="false" munge="no" preserveallsemicolons="true"
                     outputfolder="${EXTRACTED_DIST_DIR}">
            <fileset dir="${EXTRACTED_DIST_DIR}/lib/">
                <include name="**/*.js"/>
            </fileset>
        </yuicompress>
        <move file="${EXTRACTED_DIST_DIR}/${SCENEJS_JS_NAME}"
              tofile="${EXTRACTED_DIST_DIR}/lib/${SCENEJS_MIN_JS_NAME}"/>
    </target>

    <!-- Assemble javascript lib -->

    <target name="assemble-lib" depends="create-dist-directories" description="Create uncompressed SceneJS lib">

        <echo message="Building ${EXTRACTED_DIST_DIR}/lib/${SCENEJS_JS_NAME}"/>

        <concat fixlastline="yes" destfile="${EXTRACTED_DIST_DIR}/lib/${SCENEJS_JS_NAME}">
            <fileset dir="${basedir}" includes="license.txt"/>

            <!-- Core -->

            <fileset dir="${SRC_DIR}" includes="scenejs/core/core.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/core/math.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/core/webgl.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/core/node.js"/>

            <!-- Exceptions -->

            <fileset dir="${SRC_DIR}" includes="scenejs/exceptions/exceptions.js"/>

            <!-- Event routing -->

            <fileset dir="${SRC_DIR}" includes="scenejs/events/eventsBackend.js"/>

            <!-- Error handling -->

            <fileset dir="${SRC_DIR}" includes="scenejs/errors/errorsBackend.js"/>

            <!-- Time -->

            <fileset dir="${SRC_DIR}" includes="scenejs/time/timeBackend.js"/>

            <!-- Logging -->

            <fileset dir="${SRC_DIR}" includes="scenejs/logging/loggingBackend.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/logging/logging.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/logging/loggingToPage.js"/>

            <!-- Process management -->

            <fileset dir="${SRC_DIR}" includes="scenejs/processes/processesBackend.js"/>

            <!-- Load SceneJS format -->

            <fileset dir="${SRC_DIR}" includes="scenejs/load/loadBackend.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/load/load.js"/>

            <!-- Load COLLADA -->

            <fileset dir="${SRC_DIR}" includes="scenejs/loadCollada/colladaParser.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/loadCollada/loadCollada.js"/>

            <!-- Picking -->

            <fileset dir="${SRC_DIR}" includes="scenejs/pick/pickBackend.js"/>

            <!-- WebGL Trace -->

            <fileset dir="${SRC_DIR}" includes="scenejs/core/webgl-trace.js"/>

            <!-- Scene -->

            <fileset dir="${SRC_DIR}" includes="scenejs/scene/sceneBackend.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/scene/scene.js"/>

            <!-- VRAM cache management -->

            <fileset dir="${SRC_DIR}" includes="scenejs/memory/memoryBackend.js"/>

            <!-- Shader backend -->

            <fileset dir="${SRC_DIR}" includes="scenejs/shading/shaderBackend.js"/>

            <!-- Renderer -->

            <fileset dir="${SRC_DIR}" includes="scenejs/renderer/rendererBackend.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/renderer/renderer.js"/>

            <!-- Geometry -->

            <fileset dir="${SRC_DIR}" includes="scenejs/geometry/geometryBackend.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/geometry/geometry.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/geometry/objects/teapot.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/geometry/objects/cube.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/geometry/objects/sphere.js"/>

            <!-- Modelling transforms -->

            <fileset dir="${SRC_DIR}" includes="scenejs/transformation/model/modelTransformBackend.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/transformation/model/rotate.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/transformation/model/translate.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/transformation/model/scale.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/transformation/model/modelMatrix.js"/>

            <!-- Projection transforms -->

            <fileset dir="${SRC_DIR}" includes="scenejs/transformation/projection/projectionBackend.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/transformation/projection/perspective.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/transformation/projection/ortho.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/transformation/projection/frustum.js"/>

            <!-- Viewing transforms -->

            <fileset dir="${SRC_DIR}" includes="scenejs/transformation/view/viewTransformBackend.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/transformation/view/lookAt.js"/>

            <!-- Stationary view space -->

            <fileset dir="${SRC_DIR}" includes="scenejs/transformation/view/stationary.js"/>

            <!-- Lighting -->

            <fileset dir="${SRC_DIR}" includes="scenejs/lighting/lightsBackend.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/lighting/lights.js"/>

            <!-- Material -->

            <fileset dir="${SRC_DIR}" includes="scenejs/material/materialBackend.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/material/material.js"/>

            <!-- Interpolation -->

            <fileset dir="${SRC_DIR}" includes="scenejs/animation/scalarInterpolator.js"/>

            <!-- Scope -->

            <fileset dir="${SRC_DIR}" includes="scenejs/withData/withData.js"/>

            <!-- Generation -->

            <fileset dir="${SRC_DIR}" includes="scenejs/generation/generator.js"/>

            <!-- Bounding boxes -->

            <fileset dir="${SRC_DIR}" includes="scenejs/boundary/viewFrustumBackend.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/boundary/viewLocalityBackend.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/boundary/boundingBox.js"/>

            <!-- Textures -->

            <fileset dir="${SRC_DIR}" includes="scenejs/texture/textureBackend.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/texture/texture.js"/>

            <!-- Fog -->

            <fileset dir="${SRC_DIR}" includes="scenejs/fog/fogBackend.js"/>
            <fileset dir="${SRC_DIR}" includes="scenejs/fog/fog.js"/>

        </concat>

        <copy file="${EXTRACTED_DIST_DIR}/lib/${SCENEJS_JS_NAME}"
              tofile="${EXAMPLES_DIR}/lib/scenejs/${SCENEJS_JS_NAME}"/>

        <echo message="${EXTRACTED_DIST_DIR}/lib/${SCENEJS_JS_NAME} built."/>
    </target>


    <!-- Build distribution directories -->

    <target name="create-dist-directories" description="Create dist directories">


        <delete includeemptydirs="true">
            <fileset dir="${DIST_CONTAINER_DIR}" includes="**" defaultexcludes="false"/>
        </delete>

        <mkdir dir="${EXTRACTED_DIST_DIR}"/>
        <mkdir dir="${EXTRACTED_DIST_DIR}/lib"/>
    </target>

</project>
